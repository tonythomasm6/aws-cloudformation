AWSTemplateFormatVersion: '2010-09-09'
Description: Free-tier MySQL RDS instance with credentials in Secrets Manager

Parameters:
  DBUsername:
    Description: Master database username
    Type: String
    Default: admin
  DBPassword:
    Description: Master database password (min 8 chars)
    Type: String
    NoEcho: true
    MinLength: 8
  ProjectName:
    Description: Name of the project
    Type: String
    Default: ""

Resources:

  MyDBSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: my-db-secret
      Description: RDS credentials for MySQL
      SecretString: !Sub |
        {
          "username": "${DBUsername}",
          "password": "${DBPassword}"
        }

  MyDBInstance:
    Type: AWS::RDS::DBInstance
    UpdateReplacePolicy: Delete
    Properties:
      DBInstanceIdentifier: DemoDB
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: false
      BackupRetentionPeriod: 0
      DBName: myappdb
      DeletionProtection: false
      StorageType: gp2
      MultiAZ: false
      VPCSecurityGroups:
        - !GetAtt MyDBSecurityGroup.GroupId
      DBSubnetGroupName: !Ref MyDBSubnetGroup

  RDSDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: Z05736022TWK3R2C91ZQB
      Name: !Sub "${ProjectName}-rds.tonythomasm.com"
      Type: CNAME
      TTL: 60
      ResourceRecords:
        - !GetAtt MyDBInstance.Endpoint.Address

  MyDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow RDS access
      VpcId: !ImportValue VPC  
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 10.0.0.0/16   #ToDo: Update with export value not hardcoded (Replace with instance sg)

  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for RDS
      SubnetIds:
        - Fn::ImportValue: 
            Fn::Sub: "${ProjectName}PrivateSubnet1"
        - Fn::ImportValue: 
            Fn::Sub: "${ProjectName}PrivateSubnet2"
        - Fn::ImportValue: 
            Fn::Sub: "${ProjectName}PrivateSubnet3"

Outputs:

  RDSInstanceEndpoint:
    Description: RDS endpoint URL
    Value: !GetAtt MyDBInstance.Endpoint.Address
    Export:
      Name: MyRDSInstanceEndpoint

  RDSSecretArn:
    Description: ARN of the Secrets Manager secret
    Value: !Ref MyDBSecret
    Export:
      Name: MyRDSSecretArn